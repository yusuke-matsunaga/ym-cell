#ifndef INDEXHANDLER_H
#define INDEXHANDLER_H

/// @file IndexHandler.h
/// @brief IndexHandler のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2018 Yusuke Matsunaga
/// All rights reserved.

#include "ComplexHandler.h"


BEGIN_NAMESPACE_YM_DOTLIB

//////////////////////////////////////////////////////////////////////
/// @class IndexHandler IndexHandler.h "IndexHandler.h"
/// @brief LUT のインデックスベクタ用のハンドラ
//////////////////////////////////////////////////////////////////////
class IndexHandler :
  public ComplexHandler
{
public:

  /// @brief コンストラクタ
  /// @param[in] parser パーサー
  IndexHandler(DotlibParser& parser);

  /// @brief デストラクタ
  virtual
  ~IndexHandler();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief 値を表すノードを作る．
  /// @param[in] value_loc ファイル上の位置
  /// @param[in] value_list 値のリスト
  virtual
  DotlibNode*
  gen_value(const FileRegion& value_loc,
	    const vector<DotlibNode*>& value_list) override;


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////


};

END_NAMESPACE_YM_DOTLIB

#endif // INDEXHANDLER_H
