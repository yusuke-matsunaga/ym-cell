#ifndef FLOATVECTORHANDLER_H
#define FLOATVECTORHANDLER_H

/// @file FloatVectorHandler.h
/// @brief FloatVectorHandler のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2018 Yusuke Matsunaga
/// All rights reserved.

#include "dotlib/Elem1Handler.h"


BEGIN_NAMESPACE_YM_DOTLIB

//////////////////////////////////////////////////////////////////////
/// @class FloatVectorHandler FloatVectorHandler.h "dotlib/FloatVectorHandler.h"
/// @brief ( "float, float, ..." ) ; の形のヘッダ用のハンドラ
///
/// つまり全体は文字列だが，内容がコンマで区切られた浮動小数点数
//////////////////////////////////////////////////////////////////////
class FloatVectorHandler :
  public Elem1Handler
{
public:

  /// @brief コンストラクタ
  /// @param[in] parser パーサー
  FloatVectorHandler(DotlibParser& parser);

  /// @brief デストラクタ
  ~FloatVectorHandler();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief 読み込んだ値を返す．
  const vector<double>&
  value_list() const;


private:
  //////////////////////////////////////////////////////////////////////
  // Elem1Handler の仮想関数
  //////////////////////////////////////////////////////////////////////

  /// @brief begin_header() 内で呼ばれる初期化関数
  void
  initialize() override;

  /// @brief ヘッダの値を読み込む処理
  /// @param[in] value_type 型
  /// @param[in] value_loc トークンの位置
  bool
  read_header_value1(TokenType value_type,
		     const FileRegion& value_loc) override;


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////


protected:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////

  // 読み込んだ値
  vector<double> mValueList;

};


//////////////////////////////////////////////////////////////////////
// インライン関数の定義
//////////////////////////////////////////////////////////////////////

// @brief 読み込んだ値を返す．
inline
const vector<double>&
FloatVectorHandler::value_list() const
{
  return mValueList;
}

END_NAMESPACE_YM_DOTLIB

#endif // FLOATVECTORHANDLER_H
