
/// @file parse_library.cc
/// @brief parse_library() の実装ファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2005-2011, 2014, 2018, 2021 Yusuke Matsunaga
/// All rights reserved.

#include "dotlib/Parser.h"
#include "dotlib/AstAttr.h"


BEGIN_NAMESPACE_YM_DOTLIB

// @brief 'library' group statement のパースを行う．
AstAttrPtr
parse_library(Parser& parser,
	      const AttrKwd& attr)
{
  static AttrHandlerDict handler_dict{
    // simple attributes
    { "bus_naming_style",               parse_string },
    { "comment",                        parse_string },
    { "current_unit",                   parse_string },
    { "date",                           parse_string },
    { "delay_model",                    parse_delay_model },
    { "em_temp_degradation_factor",     parse_float },
    { "fall_net_delay",                 parse_string },
    { "fpga_domain_style",              parse_string },
    { "fpga_technology",                parse_string },
    { "in_place_swap_mode",             parse_string },
    { "input_threshold_pct_fall",       parse_float },
    { "input_threshold_pct_rise",       parse_float },
    { "leakage_power_unit",             parse_string },
    { "nom_calc_mode",                  parse_string },
    { "nom_process",                    parse_float },
    { "nom_temperature",                parse_float },
    { "nom_voltage",                    parse_float },
    { "output_threshold_pct_fall",      parse_float },
    { "output_threshold_pct_rise",      parse_float },
    { "piece_type",                     parse_string },
    { "power_model",                    parse_string },
    { "power_unit",                     parse_string },
    { "preferred_input_pad_voltage",    parse_string },
    { "preferred_output_pad_slew_rate_control", parse_string },
    { "preferred_output_pad_voltage",   parse_string },
    { "pulling_resistance_unit",        parse_string },
    { "rise_net_delay",                 parse_string },
    { "resistance_unit",                parse_string },
    { "revision",                       parse_string },
    { "simulation",                     parse_bool },
    { "slew_derate_from_library",       parse_float },
    { "slew_lower_threshold_pct_fall",  parse_float },
    { "slew_lower_threshold_pct_rise",  parse_float },
    { "slew_upper_threshold_pct_fall",  parse_float },
    { "slew_upper_threshold_pct_rise",  parse_float },
    { "threshold_voltage_group",        parse_string },
    { "time_unit",                      parse_string },
    { "voltage_unit",                   parse_string },

    { "default_cell_leakage_power",     parse_float },
    { "default_connection_class",       parse_string },
    { "default_fall_delay_intercept",   parse_float },
    { "default_fall_pin_resistance",    parse_float },
    { "default_fanout_load",            parse_float },
    { "default_fpga_isd",               parse_string },
    { "default_inout_pin_cap",          parse_float },
    { "default_inout_pin_fall_res",     parse_float },
    { "default_inout_pin_rise_res",     parse_float },
    { "default_input_pin_cap",          parse_float },
    { "default_input_pin_fall_res",     parse_float },
    { "default_input_pin_rise_res",     parse_float },
    { "default_intrinsic_fall",         parse_float },
    { "default_intrinsic_rise",         parse_float },
    { "default_leakage_power_density",  parse_float },
    { "default_max_capacitance",        parse_float },
    { "default_max_fanout",             parse_float },
    { "default_max_transition",         parse_float },
    { "default_min_porosity",           parse_float },
    { "default_operating_conditions",   parse_string },
    { "default_output_pin_cap",         parse_float },
    { "default_output_pin_fall_res",    parse_float },
    { "default_output_pin_rise_res",    parse_float },
    { "default_rise_delay_intercept",   parse_float },
    { "default_rise_pin_resistance",    parse_float },
    { "default_slope_fall",             parse_float },
    { "default_slope_rise",             parse_float },
    { "default_wire_load",              parse_string },
    { "default_wire_load_area",         parse_float },
    { "default_wire_load_capacitance",  parse_float },
    { "default_wire_load_mode",         parse_string },
    { "default_wire_load_selection",    parse_string },

    { "k_process_cell_fall",            parse_float },
    { "k_process_cell_leakage_power",   parse_float },
    { "k_process_cell_rise",            parse_float },
    { "k_process_drive_current",        parse_float },
    { "k_process_drive_fall",           parse_float },
    { "k_process_drive_rise",           parse_float },
    { "k_process_fall_delay_intercept", parse_float },
    { "k_process_fall_pin_resistance",  parse_float },
    { "k_process_fall_propagation",     parse_float },
    { "k_process_fall_transition",      parse_float },
    { "k_process_hold_fall",            parse_float },
    { "k_process_hold_rise",            parse_float },
    { "k_process_internal_power",       parse_float },
    { "k_process_intrinsic_fall",       parse_float },
    { "k_process_intrinsic_rise",       parse_float },
    { "k_process_min_period",           parse_float },
    { "k_process_min_pulse_width_high", parse_float },
    { "k_process_min_pulse_width_low",  parse_float },
    { "k_process_nochange_fall",        parse_float },
    { "k_process_nochange_rise",        parse_float },
    { "k_process_pin_cap",              parse_float },
    { "k_process_recovery_fall",        parse_float },
    { "k_process_recovery_rise",        parse_float },
    { "k_process_removal_fall",         parse_float },
    { "k_process_removal_rise",         parse_float },
    { "k_process_rise_delay_intercept", parse_float },
    { "k_process_rise_pin_resistance",  parse_float },
    { "k_process_rise_propagation",     parse_float },
    { "k_process_rise_transition",      parse_float },
    { "k_process_setup_fall",           parse_float },
    { "k_process_setup_rise",           parse_float },
    { "k_process_skew_fall",            parse_float },
    { "k_process_skew_rise",            parse_float },
    { "k_process_slope_fall",           parse_float },
    { "k_process_slope_rise",           parse_float },
    { "k_process_wire_cap",             parse_float },
    { "k_process_wire_res",             parse_float },

    { "k_temp_cell_fall",            parse_float },
    { "k_temp_cell_leakage_power",   parse_float },
    { "k_temp_cell_rise",            parse_float },
    { "k_temp_drive_current",        parse_float },
    { "k_temp_drive_fall",           parse_float },
    { "k_temp_drive_rise",           parse_float },
    { "k_temp_fall_delay_intercept", parse_float },
    { "k_temp_fall_pin_resistance",  parse_float },
    { "k_temp_fall_propagation",     parse_float },
    { "k_temp_fall_transition",      parse_float },
    { "k_temp_hold_fall",            parse_float },
    { "k_temp_hold_rise",            parse_float },
    { "k_temp_internal_power",       parse_float },
    { "k_temp_intrinsic_fall",       parse_float },
    { "k_temp_intrinsic_rise",       parse_float },
    { "k_temp_min_period",           parse_float },
    { "k_temp_min_pulse_width_high", parse_float },
    { "k_temp_min_pulse_width_low",  parse_float },
    { "k_temp_nochange_fall",        parse_float },
    { "k_temp_nochange_rise",        parse_float },
    { "k_temp_pin_cap",              parse_float },
    { "k_temp_recovery_fall",        parse_float },
    { "k_temp_recovery_rise",        parse_float },
    { "k_temp_removal_fall",         parse_float },
    { "k_temp_removal_rise",         parse_float },
    { "k_temp_rise_delay_intercept", parse_float },
    { "k_temp_rise_pin_resistance",  parse_float },
    { "k_temp_rise_propagation",     parse_float },
    { "k_temp_rise_transition",      parse_float },
    { "k_temp_setup_fall",           parse_float },
    { "k_temp_setup_rise",           parse_float },
    { "k_temp_skew_fall",            parse_float },
    { "k_temp_skew_rise",            parse_float },
    { "k_temp_slope_fall",           parse_float },
    { "k_temp_slope_rise",           parse_float },
    { "k_temp_wire_cap",             parse_float },
    { "k_temp_wire_res",             parse_float },

    { "k_volt_cell_fall",            parse_float },
    { "k_volt_cell_leakage_power",   parse_float },
    { "k_volt_cell_rise",            parse_float },
    { "k_volt_drive_current",        parse_float },
    { "k_volt_drive_fall",           parse_float },
    { "k_volt_drive_rise",           parse_float },
    { "k_volt_fall_delay_intercept", parse_float },
    { "k_volt_fall_pin_resistance",  parse_float },
    { "k_volt_fall_propagation",     parse_float },
    { "k_volt_fall_transition",      parse_float },
    { "k_volt_hold_fall",            parse_float },
    { "k_volt_hold_rise",            parse_float },
    { "k_volt_internal_power",       parse_float },
    { "k_volt_intrinsic_fall",       parse_float },
    { "k_volt_intrinsic_rise",       parse_float },
    { "k_volt_min_period",           parse_float },
    { "k_volt_min_pulse_width_high", parse_float },
    { "k_volt_min_pulse_width_low",  parse_float },
    { "k_volt_nochange_fall",        parse_float },
    { "k_volt_nochange_rise",        parse_float },
    { "k_volt_pin_cap",              parse_float },
    { "k_volt_recovery_fall",        parse_float },
    { "k_volt_recovery_rise",        parse_float },
    { "k_volt_removal_fall",         parse_float },
    { "k_volt_removal_rise",         parse_float },
    { "k_volt_rise_delay_intercept", parse_float },
    { "k_volt_rise_pin_resistance",  parse_float },
    { "k_volt_rise_propagation",     parse_float },
    { "k_volt_rise_transition",      parse_float },
    { "k_volt_setup_fall",           parse_float },
    { "k_volt_setup_rise",           parse_float },
    { "k_volt_skew_fall",            parse_float },
    { "k_volt_skew_rise",            parse_float },
    { "k_volt_slope_fall",           parse_float },
    { "k_volt_slope_rise",           parse_float },
    { "k_volt_wire_cap",             parse_float },
    { "k_volt_wire_res",             parse_float },

    // complex attributes
    { "capacitive_load_unit",           parse_float_string },
    { "default_part",                   parse_string_string },
    { "define",                         parse_define },
    { "define_cell_area",               parse_string_string },
    { "define_group",                   parse_string_string },
    { "library_features",               parse_string_list },
    { "piece_define",                   parse_string_complex },
    { "routing_layers",                 parse_string_list },
    { "technology",                     parse_technology },

    // group statements
    { "cell",                           parse_cell },
    { "dc_current_template",            parse_template },
    { "em_lut_template",                parse_template },
    { "fall_transition_degradation",    parse_degradation },
    { "faults_lut_template",            parse_template },
    { "input_voltage",                  parse_input_voltage },
    { "iv_lut_template",                parse_template },
    { "lu_table_template",              parse_template },
    { "noise_lut_template",             parse_template },
    { "operating_conditions",           parse_operating_conditions },
    { "output_voltage",                 parse_output_voltage },
    { "part",                           parse_part },
    { "poly_template",                  parse_template },
    { "power_lut_template",             parse_template },
    { "power_poly_template",            parse_template },
    { "power_supply",                   parse_power_supply },
    { "propagation_lut_template",       parse_template },
    { "rise_transition_degradation",    parse_degradation },
    { "scaled_cell",                    parse_cell },
    { "scaling_factors",                parse_scaling_factors },
    { "timing",                         parse_timing },
    { "timing_range",                   parse_timing_range },
    { "type",                           parse_type },
    { "wire_load",                      parse_wire_load },
    { "wire_load_selection",            parse_wire_load_selection },
    { "wire_load_table",                parse_wire_load_table }
  };
  return parser.parse_group_statement(attr, Parser::sStrHeader, handler_dict);
}

END_NAMESPACE_YM_DOTLIB
